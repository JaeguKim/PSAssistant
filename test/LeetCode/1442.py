#xor연산을 최적화하는 지식이 필요한 문제였다
def countTriplets(arr):
    n = len(arr)
    res = 0
    xors = [0]*(n+1)
    for i in range(n):
        xors[i+1] = xors[i]^arr[i]
    print(xors)
    for i in range(len(arr)-1):
        for j in range(i+1,len(arr)):
            for k in range(j,len(arr)):
                a = xors[i]^xors[j+1]
                b = xors[j+1]^xors[k+1]
                if a == b:
                    res+=1
    return res


print(countTriplets([2,3,1,6,7]))
print(countTriplets([1,1,1,1,1]))
print(countTriplets([2,3]))
print(countTriplets([808,874,66,212,150,827,941,951,26,906,912,332,732,319,995,119,916,890,238,385,367,806,585,451,906,699,305,476,237,823,986,794,192,237,45,671,690,100,726,936,382,610,796,674,446,486,88,433,489,319,214,117,163,148,55,735,744,92,692,611,215,519,720,620,188,477,353,6,359,896,743,490,781,743,490,9,483,815,716,71,651,65,714,207,517,124,633,623,22,768,790,296,574,289,799,186,933,514,423,301,138,99,233,910,871,48,855,532,323,168,491,914,633,124,517,258,775,326,577,127,574,770,316,835,639,828,323,177,498,366,156,644,536,920,384,133,261,181,432,951,519,903,384,93,477,400,77,647,714,645,79,451,396,959,563,332,895,81,814,31,817,702,399]))
